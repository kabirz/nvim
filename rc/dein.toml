[[plugins]] # airline
 repo = 'vim-airline/vim-airline'
hook_add = '''
let g:airline_powerline_fonts=1
let g:airline#extensions#tabline#enabled = 1
'''

[[plugins]] # airline
 repo = 'vim-airline/vim-airline-themes'
hook_add = '''
let g:airline_theme="badwolf"
'''

[[plugins]] 
repo = 'junegunn/vim-easy-align'

[[plugins]] 
repo = 'junegunn/fzf'
build = './install --all'
merged = '0'

[[plugins]]
repo = 'junegunn/fzf.vim'
depends = 'fzf'
hook_add = '''
noremap <silent><C-p> :FZF<CR>
noremap <silent><C-f> :Ag<CR>
command! -bang -nargs=* MRU call fzf#vim#history(fzf#vim#with_preview())
'''


[[plugins]]
repo = 'francoiscabrol/ranger.vim'
hook_add = '''
map <silent><space>r :Ranger<CR>
'''

[[plugins]]
repo = 'neoclide/coc.nvim'
merge = 0
rev = 'release'
hook_add = '''
let g:coc_global_extensions = [
	\'coc-ccls',
	\'coc-css',
	\'coc-emmet',
	\'coc-explorer',
	\'coc-flutter',
	\'coc-git',
	\'coc-gitignore',
	\'coc-go',
	\'coc-html',
	\'coc-json',
	\'coc-lists',
	\'coc-pairs',
	\'coc-pyright',
	\'coc-python',
	\'coc-rls',
	\'coc-sourcekit',
	\'coc-stylelint',
	\'coc-tailwindcss',
	\'coc-translator',
	\'coc-tslint',
	\'coc-tsserver',
	\'coc-vimlsp',
	\'coc-yank',
	\]
nnoremap <silent> <space>y :<C-u>CocList -A --normal yank<CR>
noremap <silent><space>a :<C-U><C-R>=printf("CocCommand explorer %s", expand('%:p:h'))<CR><CR>
" popup
nmap <leader>t <Plug>(coc-translator-p)
vmap <leader>t <Plug>(coc-translator-pv)
" echo
nmap <leader>e <Plug>(coc-translator-e)
nmap <leader>e <Plug>(coc-translator-ev)
" replace
nmap <leader>r <Pluh>(coc-translator-r)
nmap <leader>r <Plug>(coc-translator-rv)"
'''

[[plugins]]
repo = 'Yggdroot/LeaderF'
build =  './install.sh'
hook_add = '''
let g:Lf_ShowRelativePath = 0
let g:Lf_HideHelp = 1
let g:Lf_PreviewResult = {'Function':0, 'Colorscheme':1}
let g:Lf_GtagsAutoGenerate = 1
let g:Lf_Gtagslabel = 'native-pygments'
let g:Lf_ReverseOrder = 0
noremap <silent><space>fi :Leaderf! file<CR>
noremap <silent><space>fu :Leaderf! function<CR>
noremap <silent><space>fm :Leaderf! mru --cwd<CR>
noremap <silent><space>fh :Leaderf! mru<CR>
noremap <silent><space>fr :<C-U><C-R>=printf("Leaderf! gtags -r %s --auto-jump", expand("<cword>"))<CR><CR>
noremap <silent><space>fd :<C-U><C-R>=printf("Leaderf! gtags -d %s --auto-jump", expand("<cword>"))<CR><CR>
noremap <silent><space>fo :<C-U><C-R>=printf("Leaderf! gtags --recall %s", "")<CR><CR>
noremap <silent><space>ff :<C-U><C-R>=printf("Leaderf! rg  %s", expand("<cword>"))<CR><CR>
'''

[[plugins]] # c/c++ header
repo = 'Shougo/neoinclude.vim'

[[plugins]] # colorscheme
repo = 'dracula/vim'
name = 'dracula'
hook_add = '''
colorscheme dracula
'''

[[plugins]]
repo = 'cpiger/NeoDebug'

[[plugins]] # snippets
repo = 'sirver/ultisnips'
hook_add = '''
let g:UltiSnipsExpandTrigger = '<tab>'
let g:UltiSnipsJumpForwardTrigger = '<tab>'
let g:UltiSnipsJumpBackwardTrigger = '<s-tab>'
'''

[[plugins]] # snippets
repo = 'honza/vim-snippets'

[[plugins]] # () [] {} color
repo = 'luochen1990/rainbow'
hook_add = '''
let g:rainbow_active = 1
'''

[[plugins]] #syntax
repo = 'sheerun/vim-polyglot'

[[plugins]] # cmake
repo = 'huleiak47/vim-cmake-complete'

[[plugins]] # startup
repo = 'mhinz/vim-startify'

[[plugins]]
repo = 'ryanoasis/vim-devicons'

